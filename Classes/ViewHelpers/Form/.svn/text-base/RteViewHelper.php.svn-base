<?php

/*                                                                        *
 * This script belongs to the FLOW3 package "Fluid".                      *
 *                                                                        *
 * It is free software; you can redistribute it and/or modify it under    *
 * the terms of the GNU Lesser General Public License as published by the *
 * Free Software Foundation, either version 3 of the License, or (at your *
 * option) any later version.                                             *
 *                                                                        *
 * This script is distributed in the hope that it will be useful, but     *
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHAN-    *
 * TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser       *
 * General Public License for more details.                               *
 *                                                                        *
 * You should have received a copy of the GNU Lesser General Public       *
 * License along with the script.                                         *
 * If not, see http://www.gnu.org/licenses/lgpl.html                      *
 *                                                                        *
 * The TYPO3 project - inspiring people to share!                         *
 *                                                                        */

/**
 * RTE view helper.
 *
 * = Examples =
 *
 * <code title="Example">
 * <f:form.rte name="rteName" rows="5" cols="50" value="The text to edit" />
 * <f:form.rte property="rteName" rows="5" cols="50" value="The text to edit" />
 * </code>
 *
 * Output:
 * The rich text editor
 *
 * @package SavLibraryMvc
 * @subpackage ViewHelpers\Form
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License, version 3 or later
 * @api
 * @scope prototype
 */

require_once(t3lib_extMgm::extPath('rtehtmlarea').'pi2/class.tx_rtehtmlarea_pi2.php'); //RTE

class Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper extends Tx_Fluid_ViewHelpers_Form_AbstractFormFieldViewHelper {

	/**
	 * Counter for RTE
	 *
	 * @var int
	 */
	public $RTEcounter;

	/**
	 * Type of the document
	 *
	 * @var boolean
	 */
	public $docLarge = true;

	/**
	 * Initial JavaScript to be printed before the form (should be in head, but cannot due to IE6 timing bug)
	 *
	 * @var string
	 */
	public $additionalJS_initial = '';	

	/**
	 * Additional JavaScript to be printed before the form
	 *
	 * @var array
	 */
	public $additionalJS_pre = [];

	/**
	 * Additional JavaScript to be printed after the form
	 *
	 * @var array
	 */
	public $additionalJS_post = [];

	/**
	 * Additional JavaScript to be executed on submit
	 *
	 * @var array
	 */
	public $additionalJS_submit = [];

	/**
	 * @var string
	 */
	protected $tagName = 'textarea';

	/**
	 * Initialize the arguments.
	 *
	 * @return void
	 * @author Sebastian Kurf√ºrst <sebastian@typo3.org>
	 * @api
	 */
	public function initializeArguments() {
		parent::initializeArguments();
		$this->registerTagAttribute('rows', 'int', 'The number of rows of a text area', true);
		$this->registerTagAttribute('cols', 'int', 'The number of columns of a text area', true);
		$this->registerTagAttribute('disabled', 'string', 'Specifies that the input element should be disabled when the page loads');
		$this->registerArgument('errorClass', 'string', 'CSS class to set if there are errors for this view helper', false, 'f3-form-error');
		$this->registerUniversalTagAttributes();
	}

	/**
	 * Renders the rte htmlarea.
	 *
	 * @param array $configuration The configuration
	 * @return string
	 * @author Laurent Foulloy <yolf.typo3@orange.fr>
	 * @api
	 */
	public function render($configuration = null) {

    // Gets the fieldName prefix
    $fieldNamePrefix = $this->viewHelperVariableContainer->get('Tx_Fluid_ViewHelpers_FormViewHelper', 'fieldNamePrefix');
    
    // Gets the name and registers it
		$name = $this->getName();	
		$this->registerFieldNameForFormTokenGeneration($name);

    // Gets the value
    $value = $this->getValue();

    // Adds the attributes
		$this->tag->forceClosingTag(true);
		$this->tag->addAttribute('name', $name);
		$this->tag->setContent($value);
		$this->setErrorClassAttribute();

    // Creates the RTE
    $RTEObj = t3lib_div::makeInstance('tx_rtehtmlarea_pi2');

    // Sets the RTE counter
    if (!$this->viewHelperVariableContainer->exists('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper', 'RTEcounter')) {
      $this->RTEcounter = 1;
    } else {
      $this->RTEcounter = $this->viewHelperVariableContainer->get('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper', 'RTEcounter') + 1;
    }
    $this->viewHelperVariableContainer->addOrUpdate('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper','RTEcounter', $this->RTEcounter);

    // Gets and processes the RTE content
		if($RTEObj->isAvailable()) {

			$pageTSConfig = t3lib_BEfunc::getPagesTSconfig($GLOBALS['TSFE']->id);
			$thisConfig = $pageTSConfig['RTE.']['default.']['FE.'];
			$specConf = array(
        'richtext' => 1,
        'rte_transform' => array(
          'parameters' => array('flag=rte_enabled', 'mode=ts_css'),
        ),
      );
			$PA['itemFormElName'] = $name;
      $PA['itemFormElValue'] = $value;
			$rteContent = $RTEObj->drawRTE(
        $this,
        '',
        '',
        $row=[],
        $PA,
        $specConf,
        $thisConfig,
        'text',
        '',
        0
      );

			// Removes the hidden field
			$rteContent = preg_replace('/<input type="hidden"[^>]*>/', '', $rteContent);
			
      // Replaces [ and ] in the id
			$rteContent = preg_replace('/id\s*=\s*"(\w+' . $fieldNamePrefix . '[^"]*)"/e',
        '\'id="\' . strtr(\'$1\', \'[]\', \'__\') . \'"\'',
        $rteContent
      );
      
      // Adds onchange
			$rteContent = preg_replace('/<textarea ([^>]*)>/',
        '<textarea $1' . ' cols="' . $this->arguments['cols'] . '" rows="' .
        $this->arguments['rows'] . '" onchange="document.changed=1;">'	,
        $rteContent
      );

      // Replaces height and width
      if ($configuration['height']) {
        $rteContent = preg_replace(
          '/height:[^p]*/',
          'height:' . $configuration['height'],
          $rteContent
        );
      }
      
      // Adds 45px to the first div
      $rteContent = preg_replace('/height:([^p]*)/', 'height:$1+45', $rteContent, 1);

      if ($configuration['width']) {
        $rteContent = preg_replace(
          '/width:[^p]*/',
          'width:' . $configuration['width'],
          $rteContent
        );
      }

      $content[] = $rteContent;
      $content[] = '<script type="text/javascript">';
      // Replaces [ and ] in the id
      $additionalJS_post = preg_replace('/(?<="|\')(' . $fieldNamePrefix . '[^"\']*)/e',
        'strtr(\'$1\', \'[]\', \'__\')',
        $this->additionalJS_post[0]
      );
      $content[] = $additionalJS_post;
		  $content[] = '</script>';
		  
      // Gets the editor number from the additionalJS_post
      preg_match('/editornumber\s*=\s*"([^"]+)/', $additionalJS_post, $match);
      $editorNumber = $match[1];

      // Builds the additional header data
      if ($this->RTEcounter == 1) {
        $js = [];
        $js[] = $this->additionalJS_initial;
        $js[] = '<script type="text/javascript">';
        $js[] = $this->additionalJS_pre['rtehtmlarea-loadJScode'];
		    $js[] = '</script>';
        $GLOBALS['TSFE']->additionalHeaderData['rtehtmlarea'] .= implode(chr(10), $js);
      }

      // Replaces [ and ] in the id and adds to the submit list
      if ($this->viewHelperVariableContainer->exists('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper', 'rteSubmit')) {
        $rteSubmit = $this->viewHelperVariableContainer->get('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper', 'rteSubmit');
      } else {
        $rteSubmit = '';
      }

      $rteSubmit .= preg_replace('/(?<!getElementsByName\(\')(\w*' . $fieldNamePrefix . '[^"\']*)/e',
        'strtr(\'$1\', \'[]\', \'__\')',
        $this->additionalJS_submit[0]
      );
      $this->viewHelperVariableContainer->addOrUpdate('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper','rteSubmit', $rteSubmit);

      // Adds the rte changed list
      if ($this->viewHelperVariableContainer->exists('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper', 'rteChanged')) {
        $rteChanged = $this->viewHelperVariableContainer->get('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper', 'rteChanged');
      } else {
        $rteChanged = '';
      }
      $rteChanged .= 'checkIfRteChanged(\'' . $editorNumber . '\');';
      $this->viewHelperVariableContainer->addOrUpdate('Tx_SavLibraryMvc_ViewHelpers_Form_RteViewHelper','rteChanged', $rteChanged);
		}

		return implode(chr(10), $content);
  }

}

?>
