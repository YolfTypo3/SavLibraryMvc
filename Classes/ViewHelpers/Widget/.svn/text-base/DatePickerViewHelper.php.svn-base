<?php

/*                                                                        *
 * This script is part of the TYPO3 project - inspiring people to share!  *
 *                                                                        *
 * TYPO3 is free software; you can redistribute it and/or modify it under *
 * the terms of the GNU General Public License version 2 as published by  *
 * the Free Software Foundation.                                          *
 *                                                                        *
 * This script is distributed in the hope that it will be useful, but     *
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHAN-    *
 * TABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General      *
 * Public License for more details.                                       *
 *                                                                        */

/**
 * A date picker view helper.
 *
 * = Examples =
 *
 * <code title="DatePicker">
 * <sav:wiget.datePicker aarguments=""  />
 * </code>
 *
 * Output:
 * the date
 *
 * @package SavLibraryKickstarter
 * @subpackage ViewHelpers
 */
class Tx_SavLibraryMvc_ViewHelpers_Widget_DatePickerViewHelper extends Tx_Fluid_ViewHelpers_Form_AbstractFormFieldViewHelper {

	/**
	 * @var string
	 */
	protected $tagName = 'input';

	/**
	 * Initialize the arguments.
	 *
	 * @return void
	 * @author Sebastian Kurf√ºrst <sebastian@typo3.org>
	 * @author Christopher Hlubek <hlubek@networkteam.com>
	 * @api
	 */
	public function initializeArguments() {
		parent::initializeArguments();
		$this->registerUniversalTagAttributes();
	}

	/**
	 * @param array $configuration The configuration
	 * @param array $default The default configurataion values
	 * @param string $action The action to execute
	 *    	
   * @return string the options array
	 * @author Laurent Foulloy <yolf.typo3@orange.fr>
	 */
	public function render($configuration, $default = []) {

    // Sets the date format
    if (!isset($default['format'])) {
      $default['format'] = '%d-%m-%Y';
    }

    // Merges the default values with the field configuration
    $fieldConfiguration = array_merge($default, $configuration['field']);

    // Instanciates the calendar
    $datePicker = t3lib_div::makeInstance('Tx_SavLibraryMvc_Datepicker_DatePicker');
    $datePicker->setAdditionalHeader();

    // Registers the field name
		$name = $this->getName();
		$this->registerFieldNameForFormTokenGeneration($name);
		
    // Adds the attribute for the tag
		$this->tag->addAttribute('type', 'text');
		$this->tag->addAttribute('name', $name);
		
    // Creates a unique id which will be used by the calendar and adds it
    $datePickerConfiguration['id'] = uniqid();
		$this->tag->addAttribute('id', 'input' . $datePickerConfiguration['id']);

    // Adds items to the configuration
    $datePickerConfiguration['format'] = $fieldConfiguration['format'];
    $datePickerConfiguration['showsTime'] = $configuration['showsTime'];

    // Sets the value
    if($this->getValue() === null) {
      $value = $fieldConfiguration['noDefault'] ? '' : date();
    } elseif ($fieldConfiguration['noDefault'] && $configuration['newRecord']) {
      $value = '';
    } else {
      $value = strftime($datePickerConfiguration['format'], $this->getValue()->format('U'));
    }
		$this->tag->addAttribute('value', $value);
		$this->tag->addAttribute('onchange','document.changed=1;');

		$this->setErrorClassAttribute();

    $content = $this->tag->render() . $datePicker->buidDatePickerSetup($datePickerConfiguration);

		return $content;
  }

}
?>

